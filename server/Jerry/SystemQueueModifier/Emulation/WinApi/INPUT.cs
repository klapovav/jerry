using System;
using System.Runtime.InteropServices;

namespace Jerry.SystemQueueModifier.Emulation.WinApi;

#pragma warning disable 649

internal struct INPUT
{
    public UInt32 Type;

    /// <summary>
    /// The data structure that contains information about the simulated Mouse, Keyboard or Hardware event.
    /// </summary>
    public MOUSEKEYBDHARDWAREINPUT Data;
}

/// <summary>
/// Specifies the type of the input event. This member can be one of the following values.
/// </summary>
internal enum InputType : uint // UInt32
{
    /// <summary>
    /// INPUT_MOUSE = 0x00 (The event is a mouse event. Use the mi structure of the union.)
    /// </summary>
    Mouse = 0,

    /// <summary>
    /// INPUT_KEYBOARD = 0x01 (The event is a keyboard event. Use the ki structure of the union.)
    /// </summary>
    Keyboard = 1,

    /// <summary>
    /// INPUT_HARDWARE = 0x02 (Windows 95/98/Me: The event is from input hardware other than a keyboard or mouse. Use the hi structure of the union.)
    /// </summary>
    Hardware = 2,
}

/// <summary>
/// The combined/overlayed structure that includes Mouse, Keyboard and Hardware Input message data (see: http://msdn.microsoft.com/en-us/library/ms646270(VS.85).aspx)
/// </summary>
[StructLayout(LayoutKind.Explicit)]
internal struct MOUSEKEYBDHARDWAREINPUT
{
    /// <summary>
    /// The <see cref="MOUSEINPUT"/> definition.
    /// </summary>
    [FieldOffset(0)]
    public MOUSEINPUT Mouse;

    /// <summary>
    /// The <see cref="KEYBDINPUT"/> definition.
    /// </summary>
    [FieldOffset(0)]
    public KEYBDINPUT Keyboard;

    /// <summary>
    /// The <see cref="HARDWAREINPUT"/> definition.
    /// </summary>
    [FieldOffset(0)]
    public HARDWAREINPUT Hardware;
}

/// <summary>
/// The HARDWAREINPUT structure contains information about a simulated message generated by an input device other than a keyboard or mouse.  (see: http://msdn.microsoft.com/en-us/library/ms646269(VS.85).aspx)
/// Declared in Winuser.h, include Windows.h
/// </summary>
internal struct HARDWAREINPUT
{
    /// <summary>
    /// Value specifying the message generated by the input hardware.
    /// </summary>
    public UInt32 Msg;

    /// <summary>
    /// Specifies the low-order word of the lParam parameter for uMsg.
    /// </summary>
    public UInt16 ParamL;

    /// <summary>
    /// Specifies the high-order word of the lParam parameter for uMsg.
    /// </summary>
    public UInt16 ParamH;
}

#pragma warning restore 649
